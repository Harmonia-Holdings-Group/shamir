{"version":3,"sources":["components/encrypt/Encrypt.jsx","components/decrypt/Decrypt.jsx","App.js","index.js"],"names":["Encrypt","props","state","keyShares","keyThreshold","encryptionPassword","error","fileName","genKey","showResult","cipherContent","cipherBlob","Blob","showAllCipher","generatedKeys","generatedKeysConcat","handleInputChange","bind","handleEncryptRequest","handleFileSelection","fileInput","React","createRef","event","target","value","name","this","setState","current","files","length","parseInt","reader","FileReader","onload","e","fileContent","result","content8","Uint8Array","wasmOut","global","GoEncrypt","encodedEncrypted","atob","encryptedBytes","i","charCodeAt","console","log","blob","keys","GoGenKeys","join","type","readAsArrayBuffer","show","id","className","ref","onChange","htmlFor","min","placeholder","onClick","style","display","href","window","URL","createObjectURL","download","map","k","substr","Component","Decrypt","keysFileName","encryptedFileName","showParsedKeys","encryptedContent","showAllDecrypted","plainContentURL","derivedKey","decryptedFileName","handleDecryptRequest","handleKeysFileSelection","handleEncryptedFileSelection","keysFileInput","encryptedFileInput","keysReader","split","filter","onerror","readAsText","key","GoGetKeyFromKeyShares","startsWith","content","GoDecrypt","blobURL","byteContent","contentData","endsWith","App","usage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0591e150.chunk.js","sourcesContent":["import React from 'react';\n\n// Styles\nimport './styles.scss';\n\nclass Encrypt extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      keyShares: 3,\n      keyThreshold: 2,\n      encryptionPassword: \"\",\n      error: \"\",\n      fileName: \"Select file to encrypt\",\n      genKey: \"\",\n      showResult: false,\n      cipherContent: \"\",\n      cipherBlob: new Blob(),\n      showAllCipher: false,\n      generatedKeys: [],\n      generatedKeysConcat: new Blob(),\n    };\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleEncryptRequest = this.handleEncryptRequest.bind(this);\n    this.handleFileSelection = this.handleFileSelection.bind(this);\n\n    this.fileInput = React.createRef();\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleEncryptRequest(event) {\n    if (this.fileInput.current.files.length !== 1) {\n      this.setState({error: \"you must select exactly 1 file to encrypt!\"});\n      return;\n    }\n    if (parseInt(this.state.keyShares) < 3) {\n      this.setState({error: \"key shares value must be at least 3\"});\n      return;\n    }\n    if (parseInt(this.state.keyThreshold) < 2 || parseInt(this.state.keyThreshold) > parseInt(this.state.keyShares)) {\n      this.setState({error: \"keys threshold value must be between 2 and the number of key shares.\"});\n      return;\n    }\n    if (this.state.encryptionPassword === \"\") {\n      this.setState({error: \"encryption password must not be empty!\"});\n      return;\n    }\n    this.setState({\n      error: \"\"\n    })\n\n    const reader = new FileReader();\n    reader.onload = function(e) {\n      const fileContent = e.target.result;\n      const content8 = new Uint8Array(fileContent);\n\n      const wasmOut = global.GoEncrypt(this.state.encryptionPassword, content8);\n      if (wasmOut.length !== 2) {\n        this.setState({error: `(unexpected) ${wasmOut}`});\n        return;\n      }\n\n      const encodedEncrypted = atob(wasmOut[1]);\n      const encryptedBytes = new Uint8Array(encodedEncrypted.length);\n      for (var i = 0; i < encodedEncrypted.length; i++) {\n        encryptedBytes[i] = encodedEncrypted.charCodeAt(i);\n      }\n      console.log(`ENCRYPTED BYTES: ${encryptedBytes}`)\n      const blob = new Blob([encryptedBytes])\n      debugger;\n      const keys = global.GoGenKeys(\n        wasmOut[0],\n        parseInt(this.state.keyThreshold),\n        parseInt(this.state.keyShares)\n      );\n\n      this.setState({\n        generatedKeys: keys,\n        generatedKeysConcat: new Blob([keys.join(\"\\n\")], {\n          type: \"text/plain\",\n        }),\n        genKey: wasmOut[0],\n        cipherContent: wasmOut[1],\n        showResult: true,\n        cipherBlob: blob\n      });\n    }\n    reader.onload = reader.onload.bind(this);\n    reader.readAsArrayBuffer(this.fileInput.current.files[0]);\n  }\n\n  handleFileSelection(event) {\n    if (this.fileInput.current.files.length !== 1) {\n      this.setState({error: \"you must select exactly 1 file to encrypt!\"});\n      return;\n    }\n    const fileName = this.fileInput.current.files[0].name;\n    this.setState({\n      fileName: fileName\n    })\n  }\n\n  render () {\n    return this.props.show ? (\n      <div id=\"encryption-section\">\n        <section className=\"container\" id=\"encryption-input\">\n          <div className=\"file-input\">\n            <input\n              type=\"file\" id=\"file-input\"\n              ref={this.fileInput}\n              onChange={this.handleFileSelection}\n            />\n            <label htmlFor=\"file-input\"><i className=\"fas fa-file\"></i><span>{this.state.fileName}</span></label>\n          </div>\n          <div className=\"input-group\">\n            <p className=\"accent\">Key shares</p>\n            <input\n              type=\"number\"\n              min=\"3\"\n              placeholder=\"Key shares\"\n              id=\"key-shares-input\"\n              name=\"keyShares\"\n              value={this.state.keyShares}\n              onChange={this.handleInputChange}\n            />\n            <label htmlFor=\"key-shares-input\">Number of keys to generate after encryption. Min: 3</label>\n          </div>\n          <div className=\"input-group\">\n            <p className=\"accent\">Keys threshold</p>\n            <input\n              type=\"number\"\n              placeholder=\"Key threshold\"\n              id=\"key-threshold-input\"\n              name=\"keyThreshold\"\n              min=\"2\"\n              value={this.state.keyThreshold}\n              onChange={this.handleInputChange}\n            />\n            <label htmlFor=\"key-threshold-input\">\n              Minimum number of keys required to decrypt the file, must bet least 2, and at most\n              the number of key shares.\n            </label>\n          </div>\n          <div className=\"input-group\">\n            <p className=\"accent\">Encryption password</p>\n            <input\n              type=\"password\"\n              placeholder=\"Enter a master password\"\n              id=\"encryption-password\"\n              name=\"encryptionPassword\"\n              value={this.state.encryptionPassword}\n              onChange={this.handleInputChange}\n            />\n            <label htmlFor=\"encryption-password\">Master password to encrypt the file.</label>\n          </div>\n          <div className=\"button\">\n            <button onClick={this.handleEncryptRequest} id=\"encrypt-button\">Encrypt <i className=\"fas fa-play\"></i></button>\n          </div>\n          <p style={{display: this.state.error !== \"\" ? 'block' : 'none'}} className='error-message'>\n            <span>Error</span>: {this.state.error}\n          </p>\n        </section>\n\n        <section className=\"container\" id=\"encryption-keys\">\n          <p className=\"subsection-title\">Keys <i className=\"fas fa-copy\"></i></p>\n          <p className=\"small\" style={{display: !this.state.showResult ? 'none' : ''}}>\n            Derived master key:\n            <span>{ this.state.genKey }</span>\n          </p>\n          <p style={{display: !this.state.showResult ? 'none' : ''}}>\n            <a\n              href={window.URL.createObjectURL(this.state.generatedKeysConcat)}\n              download='keys.txt'\n            >\n              Save file <i className=\"fas fa-file-download\"></i>\n            </a>\n          </p>\n          <div className=\"keys\">\n            <p className=\"encoded\" style={{display: this.state.showResult ? 'none' : ''}} >\n              Waiting for input...\n            </p>\n            <p className=\"encoded\" style={{display: !this.state.showResult ? 'none' : ''}}>\n              {this.state.generatedKeys.map((k) => \n                <span key={k}>{k}</span>\n              )}\n            </p>\n          </div>\n        </section>\n      \n        <section className=\"container\" id=\"encrypted-file\">\n          <p className=\"subsection-title\">Encrypted file <i className=\"fas fa-copy\"></i></p>\n          <p style={{display: !this.state.showResult ? 'none' : ''}}>\n            <a\n              href={window.URL.createObjectURL(this.state.cipherBlob)}\n              download={`${this.state.fileName}.aes`}\n            >\n              Save file <i className=\"fas fa-file-download\"></i>\n            </a>\n          </p>\n          <p className=\"small\">\n            Base64 encoded:\n          </p>\n          <p className=\"encoded\" style={{display: this.state.showResult ? 'none' : ''}} >\n              Waiting for input...\n          </p>\n          <div className=\"encoded\" style={{display: !this.state.showResult ? 'none' : ''}}>\n            <p style={{display: this.state.cipherContent.length >= 500 && this.state.showAllCipher ? 'block': 'none'}}>\n              <button onClick={() => { this.setState({showAllCipher: false})}} >... hide</button>\n            </p>\n            { this.state.showAllCipher ? this.state.cipherContent : this.state.cipherContent.substr(0, 500) }\n            <p style={{display: this.state.cipherContent.length >= 500 && !this.state.showAllCipher ? 'block': 'none'}}>\n              { this.state.cipherContent.substr(0, 500) }\n              <button onClick={() => { this.setState({showAllCipher: true})}} >... show all</button>\n            </p>\n          </div>\n        </section>\n      </div>\n    ): null;\n  }\n}\n\nexport default Encrypt;","import React from \"react\";\n\n// Styles\nimport \"./styles.scss\";\n\nclass Decrypt extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      keysFileName: \"Select keys file\",\n      encryptedFileName: \"Select encrypted file\",\n      keys: [],\n      showParsedKeys: false,\n      encryptedContent: new Blob(),\n      error: \"\",\n      showResult: false,\n      showAllDecrypted: false,\n      plainContentURL: \"\",\n      derivedKey: \"\",\n      decryptedFileName: \"\",\n    };\n\n    this.handleDecryptRequest = this.handleDecryptRequest.bind(this);\n\n    this.handleKeysFileSelection = this.handleKeysFileSelection.bind(this);\n    this.handleEncryptedFileSelection = this.handleEncryptedFileSelection.bind(\n      this\n    );\n    this.keysFileInput = React.createRef();\n    this.encryptedFileInput = React.createRef();\n  }\n\n  handleKeysFileSelection(e) {\n    if (this.keysFileInput.current.files.length !== 1) {\n      this.setState({ error: \"you must select exactly 1 file to encrypt!\" });\n      return;\n    }\n    const fileName = this.keysFileInput.current.files[0].name;\n    this.setState({\n      keysFileName: fileName,\n    });\n\n    const keysReader = new FileReader();\n    keysReader.onload = function (e) {\n      this.setState({\n        keys: e.target.result.split(\"\\n\").filter((k) => k.length > 0),\n        showParsedKeys: true,\n      });\n    };\n    keysReader.onerror = function (e) {\n      this.setState({\n        error: \"Failed reading keys file </3\",\n      });\n    };\n    keysReader.onload = keysReader.onload.bind(this);\n    keysReader.onerror = keysReader.onerror.bind(this);\n    keysReader.readAsText(this.keysFileInput.current.files[0], \"UTF-8\");\n  }\n\n  handleEncryptedFileSelection(e) {\n    if (this.encryptedFileInput.current.files.length !== 1) {\n      this.setState({ error: \"you must select exactly 1 file to encrypt!\" });\n      return;\n    }\n    const fileName = this.encryptedFileInput.current.files[0].name;\n    this.setState({\n      encryptedFileName: fileName,\n    });\n\n    const reader = new FileReader();\n    reader.onload = function (e) {\n      const fileContent = e.target.result;\n      const content8 = new Uint8Array(fileContent);\n      this.setState({\n        encryptedContent: content8,\n      });\n    };\n    reader.onerror = function (e) {\n      this.setState({\n        error: \"Failed reading encrypted file </3\",\n      });\n    };\n    reader.onload = reader.onload.bind(this);\n    reader.onerror = reader.onerror.bind(this);\n    reader.readAsArrayBuffer(this.encryptedFileInput.current.files[0], \"UTF-8\");\n  }\n\n  handleDecryptRequest(e) {\n    if (this.state.keys.length < 2) {\n      this.setState({\n        error: \"obtained less than 2 keys from keys input\",\n      });\n      return;\n    }\n    if (this.state.encryptedContent.length === 0) {\n      this.setState({\n        error: \"please select an encrypted file\",\n      });\n      return;\n    }\n\n    const key = global.GoGetKeyFromKeyShares(this.state.keys);\n    if (typeof key === \"string\" && key.startsWith(\"ERROR\")) {\n      this.setState({\n        error: key,\n      });\n      return;\n    }\n\n    const content = global.GoDecrypt(key, this.state.encryptedContent);\n    if (typeof content === \"string\" && content.startsWith(\"ERROR\")) {\n      this.setState({\n        error: content,\n      });\n      return;\n    }\n\n    const byteContent = atob(content);\n    const contentData = new Uint8Array(byteContent.length);\n    for (var i = 0; i < byteContent.length; i++) {\n      contentData[i] = byteContent.charCodeAt(i);\n    }\n\n    if (this.state.encryptedFileName.endsWith(\".aes\")) {\n      this.setState({\n        decryptedFileName: this.state.encryptedFileName.substr(\n          0,\n          this.state.encryptedFileName.length - 4\n        ),\n      });\n    } else {\n      this.setState({\n        decryptedFileName: this.state.encryptedFileName,\n      });\n    }\n\n    var blob, blobURL;\n    blob = new Blob([contentData]);\n    blobURL = window.URL.createObjectURL(blob);\n\n    this.setState({\n      error: \"\",\n      derivedKey: key,\n      showResult: true,\n      plainContentURL: blobURL,\n    });\n  }\n\n  render() {\n    return this.props.show ? (\n      <div id=\"encryption-section\">\n        <div className=\"container\" id=\"decryption-input\">\n          <div className=\"input-group\">\n            <p className=\"accent\">Keys</p>\n            <label>\n              A text file containing the decryption keys, each one on a new\n              line.\n            </label>\n            <div className=\"file-input\">\n              <input\n                type=\"file\"\n                id=\"file-input\"\n                ref={this.keysFileInput}\n                onChange={this.handleKeysFileSelection}\n              />\n              <label htmlFor=\"file-input\">\n                <i className=\"fas fa-file\"></i>\n                <span>{this.state.keysFileName} </span>\n              </label>\n            </div>\n            <p\n              className=\"encoded\"\n              style={{ display: !this.state.showParsedKeys ? \"none\" : \"\" }}\n            >\n              {this.state.keys.map((k) => (\n                <span key={k}>{k}</span>\n              ))}\n            </p>\n          </div>\n          <div className=\"input-group\">\n            <p className=\"accent\">Encrypted file</p>\n            <label>Encrytped file</label>\n            <div className=\"file-input\">\n              <input\n                type=\"file\"\n                id=\"efile-input\"\n                ref={this.encryptedFileInput}\n                onChange={this.handleEncryptedFileSelection}\n              />\n              <label htmlFor=\"efile-input\">\n                <i className=\"fas fa-file\"></i>\n                <span>{this.state.encryptedFileName} </span>\n              </label>\n            </div>\n          </div>\n          <div className=\"button\">\n            <button onClick={this.handleDecryptRequest}>\n              Decrypt <i className=\"fas fa-play\"></i>\n            </button>\n          </div>\n          <p\n            style={{ display: this.state.error !== \"\" ? \"block\" : \"none\" }}\n            className=\"error-message\"\n          >\n            <span>Error</span>: {this.state.error}\n          </p>\n        </div>\n        <section className=\"container\" id=\"encrypted-file\">\n          <p className=\"subsection-title\">\n            Decrypted file <i className=\"fas fa-copy\"></i>\n          </p>\n          <p\n            className=\"small\"\n            style={{ display: !this.state.showResult ? \"none\" : \"\" }}\n          >\n            Derived master key:\n            <span>{this.state.derivedKey}</span>\n          </p>\n          <p style={{ display: !this.state.showResult ? \"none\" : \"\" }}>\n            <a\n              href={this.state.plainContentURL}\n              download={this.state.decryptedFileName}\n            >\n              Save file <i className=\"fas fa-file-download\"></i>\n            </a>\n          </p>\n        </section>\n      </div>\n    ) : null;\n  }\n}\n\nexport default Decrypt;\n","import React from 'react';\n\n// Components\nimport Encrypt from './components/encrypt/Encrypt';\nimport Decrypt from './components/decrypt/Decrypt';\n\n\n// Styles\nimport './css/nav.scss';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      usage: 'encrypt',\n    };\n  }\n\n  render () {\n    return (\n      <div className='root-container'>\n        <nav>\n          <div>\n            <p\n              onClick={() => {this.setState({usage: 'encrypt'})}}\n              className={this.state.usage === 'encrypt'? 'active' : ''}>\n                Encrypt\n            </p>\n          </div>\n          <div>\n            <p\n              onClick={() => {this.setState({usage: 'decrypt'})}}\n              className={this.state.usage === 'decrypt'? 'active' : ''}>\n                Decrypt\n            </p>\n          </div>\n        </nav>\n\n        <Encrypt show={this.state.usage === 'encrypt'}/>\n        <Decrypt show={this.state.usage === 'decrypt'}/>\n      </div>\n    )\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n// Styles\nimport './css/main.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}